apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: '2024-10-04T18:28:10Z'
  generation: 1
  managedFields:
    - apiVersion: batch/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:concurrencyPolicy: {}
          f:failedJobsHistoryLimit: {}
          f:jobTemplate:
            f:spec:
              f:template:
                f:spec:
                  f:containers:
                    k:{"name":"example"}:
                      .: {}
                      f:args: {}
                      f:image: {}
                      f:imagePullPolicy: {}
                      f:name: {}
                      f:resources: {}
                      f:terminationMessagePath: {}
                      f:terminationMessagePolicy: {}
                  f:dnsPolicy: {}
                  f:restartPolicy: {}
                  f:schedulerName: {}
                  f:securityContext: {}
                  f:terminationGracePeriodSeconds: {}
          f:schedule: {}
          f:successfulJobsHistoryLimit: {}
          f:suspend: {}
      manager: rancher
      operation: Update
      time: '2024-10-04T18:28:10Z'
  name: example-cronjob
  namespace: default
  uid: 7410fec1-e23d-4153-a008-8e43ad5c45ba
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - args:
                - /bin/sh
                - '-c'
                - date; echo "Hello from the Kubernetes CronJob"
              image: busybox
              imagePullPolicy: Always
              name: example
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: 0 0 * * *
  successfulJobsHistoryLimit: 3
  suspend: false
status: {}
